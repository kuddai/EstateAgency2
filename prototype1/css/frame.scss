
.clearfix:before, .clearfix:after {
    content: " ";
    display: table;
}
.clearfix:after {
    clear: both;
}

//columns

@for $i from 1 through 12 {
    .col-#{$i} {
        width: 100%*$i/12;
    }
}

$anim-time: 0.5s;
$base-font-size: 16px;
$blue: #03B1F3;
$crimson: #FF2C83;

$type-settings: (
  -2: (
	font-size: 0.75  * $base-font-size
  ), 
  -1: (
    font-size: 0.875 * $base-font-size
  ),
  0: (
    font-size: $base-font-size
  ),
  1: (
    font-size: 1.333 * $base-font-size
  ),
  2: (
    font-size: 1.778 * $base-font-size
  ),
  3: (
    font-size: 2.368 * $base-font-size
  )
);

@function type-scale($level) {
  @return map-get(
    map-get($type-settings, $level), 'font-size');
}

@function line-height($level) {
  @return map-get(
    map-get($type-settings, $level), 'font-size') * 1.25;
}

@mixin type-setting($level) {
  font-size: type-scale($level);
  line-height: line-height($level);
}

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

html, body {
	width: 100%;
	height: 100%;
	padding: 0;
	margin: 0;
	box-sizing: border-box;
	position: relative;
}

body {
    font-family: 'Roboto', sans-serif;
}

@mixin big-screen-common() {
	.location, .type, .price, .house, .more,
	.area, .description, .additional {
		@include transition(font $anim-time ease, width $anim-time ease, height $anim-time ease, left $anim-time ease, top $anim-time ease);
		position: absolute;
		text-align: center;
		font-weight: 300;
		box-sizing: border-box;
		display: -ms-flexbox;
		display: -webkit-flex;
		display: flex;

		-ms-flex-align: center;
		-webkit-align-items: center;
		-webkit-box-align: center;

		align-items: center;
		justify-content: center;
	}	
	
	.type, .house, .price, .location {
		box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.4);
	}

	.more, .description {
		//box-shadow: 1px 1px 2px #658A99;
		box-shadow: 1px 1px 2px rgba(69, 95, 105, 0.86);
	}

	.location {
		background-color: lightcyan;
		font-weight: 400;
	}

	.type, .house {
		color: white;
		background-color: $blue;
	}

	.description, .more {
		background-color: #071f27;
	}

	.description {
		color: white;
	}

	.price {
		color : white;
		background-color: $crimson;
	}

	.area, .additional {
		background-color: white;
	}

	.content {
		overflow: hidden;
	}

	.description, .additional, .area {
		.content {
			text-align: left;
			position: relative;
			font-weight: 300;
		}
	}

	.additional, .area {
		.content {
			th {
				font-weight: 300;
			}
			td, th{
				text-align: left;
			}
			table {
				table-layout: fixed;
				border-collapse: collapse;
			}
			td {
				padding: 0px;
			}
			td:first-child {
				padding-right: 5px;
			}
		}
	}
	
	.offer.expanded {
		.additional, .area {
			.content {
				td:first-child {
					padding-right: 10px;
				}
			}
		}
	}
	
	.description {
		.content:before {
			content: "\00A0";
			background: linear-gradient(to right, rgba(7, 31, 39, 0), rgba(7, 31, 39, 0.7) 50%, rgba(7, 31, 39, 1) 90%);
			position: absolute;
			right:0;
			bottom:0;
			width: 6em;
			text-align: right;
		}

		.content:after {
			content: "\00A0";
			background: #071f27; 
			height: 100%;
			width: 100%;
			position: absolute;
			left: 0;
			top: 99%;
		}
	}
	
	.more {
		a {
			@include transition(color $anim-time ease);
			text-decoration: none;
			color: #365059;
			text-shadow: 0px 1px 0px #5C7F8C;//#7BB8CC;
			cursor:not-allowed;
		}
		&.available a {
			color: $blue;
			text-shadow: 0px 1px 0px #5C8A99;
			cursor:default;		
		}
		&.available a:hover {
			color: $crimson;
			text-shadow: 0px 1px 0px #995C75;
			cursor: pointer;		
		}
	}

	.offer .more .content {
		//@include transition(transform $anim-time ease);
		-webkit-transition: -webkit-transform $anim-time ease;
		-moz-transition: -moz-transform $anim-time ease;
		-ms-transition: -ms-transform $anim-time ease;
		-o-transition: -o-transform $anim-time ease;
		transition: transform $anim-time ease;

		-webkit-transform: rotate(0deg);
		   -moz-transform: rotate(0deg);
			-ms-transform: rotate(0deg);
			 -o-transform: rotate(0deg);
				transform: rotate(0deg);	
	}

	.offer.expanded .more .content {
		-webkit-transform: rotate(180deg);
		   -moz-transform: rotate(180deg);
			-ms-transform: rotate(180deg);
			 -o-transform: rotate(180deg);
				transform: rotate(180deg);
	}
}

@mixin rp-offer($offer_width, $parameters, $parameters_expanded) {
    //tricky part 
    //choose a, b so that there is same margin between block
    //horizontally and vertically. 
    $w: $offer_width;
    $x: map-get($parameters, 'margin');
    $y: map-get($parameters, 'padding');
    $b: ($w - 2 * $x) / 3;// size of the large blocks
    $a: ($b - $x) / 2;//size of small blocks
	//text levels
	$sm-t: map-get($parameters, 'small-text-level');
	$md-t: map-get($parameters, 'medium-text-level');
	$bg-t: map-get($parameters, 'big-text-level');
	
	//e - extended
	$xe: map-get($parameters_expanded, 'margin');
	$ye: map-get($parameters_expanded, 'padding');
	$be:($w - $xe) / 2;
	$ae:($w - 3 * $xe) / 4;
    $ce: map-get($parameters_expanded, 'ratio') * $ae; //4 to 6 //size of semi blocks
	//text levels
	$sm-te: map-get($parameters_expanded, 'small-text-level');
	$md-te: map-get($parameters_expanded, 'medium-text-level');
	$bg-te: map-get($parameters_expanded, 'big-text-level');
    
    @function shift($i) {
        @return 1 * $b + ($i - 1) * $a + $i * $x;
    }
    
    @mixin rp-block($wd, $ht, $level, $padding) {
        $fs: type-scale($level);
        $lh: line-height($level);
        width: $wd;
        height: $ht;
        font-size: $fs;
        line-height: $lh;
		//without that with just padding it is very hard to center
		//everything properly in case of possible content overflow
        .content {
            max-width: $wd - 2 * $padding;
            max-height: round(($ht - 2 * $padding) / $lh) * $lh;
        }
    }
	
	.offer {
		@include transition(width $anim-time ease, height $anim-time ease);
		position: relative;
		width: $w;
		height: $b;
		
				
		//to make arrow big
		.more .content {
			font-size: ($a - 2 * $y) * 0.5;
		}
		
		.additional, .area {
			.content tr {
				border: map-get($parameters, 'tr-border') solid transparent;
			}
		}
		
		.extra {
			//only with that configuraton the table computes size properly
			//in the expanded state
			position: absolute; //to remove from dom flow
			visibility: hidden; //to hide this
		}

		//sizes
		//normal
		.type, .price, .house, .more {
			@include rp-block($a, $a, $md-t, $y);
		}

		.description {
			@include rp-block($b, $a, $sm-t, $y);
		}

		.additional, .area {
			@include rp-block($a, $a, $sm-t, $y);
		}

		.location {
			@include rp-block($b, $b, $bg-t, $y);
		}

		//position
		.location, .type, .price, .house, .area {
			top: 0;
		}    

		.description, .additional, .more {
			top: $a + $x;
		}

		.location {
			left: 0;
		}

		.type, .description {
			left: shift(1);
		}

		.price {
			left: shift(2);
		}

		.house, .additional {
			left: shift(3);
		}

		.area, .more {
			left: shift(4);
		} 
	}
	//expanded
	.offer.expanded {
		width: $w;
		height: $be + $xe + $ae;
		
		.extra {
			visibility: visible;
			position: inherit;
		}
		
		//sizes
		.type, .price, .house, .more {
			@include rp-block($ae, $ae, $md-te, $ye);
		}
		//to make arrow big
		.more .content {
			font-size: ($ae - 2 * $ye) * 0.5;
		}
		.description {
			@include rp-block($be, $ce, $sm-te, $ye);
		}
		.additional, .area {
			@include rp-block($ae, $ce, $sm-te, $ye);
		}
		.location {
			@include rp-block($be, $be, $bg-te, $ye);
		}

		//position
		.location, .price, .house {
			top:  0;
		}
		.type, .area {
			top: $ae + $xe;
		}
		.description, .additional {
			top: $be + $xe;
		}
		.more {
			top: $ae + $ce + 2 * $xe;
		}
		.location, .description {
			left: 0;
		}
		.price, .type, .additional {
			left: $be + $xe;
		}
		.house, .area, .more {
			left: $be + $ae + 2 * $xe;
		}
	}

}

.card {
    padding: 15px;
    box-shadow: 2px 2px 6px #bcbcbc;
	box-sizing: border-box;
	position: relative;
}

.location, .type, .price, .house, .more,
.area, .description, .additional {

}


//from bootstap
@media (min-width: 768px) {
	@include big-screen-common();
	
    .container {
        width: 750px;
    }
	$parameters : (
		'margin': 3px,
		'padding': 8px,
		'small-text-level' : -2,
		'medium-text-level': -1,
		'big-text-level'   : 1,
		'tr-border': 5px
	);
	$parameters_expanded : (
		'margin': 9px,
		'padding': 10px,
		'small-text-level' : -2,
		'medium-text-level': 0,
		'big-text-level'   : 2,
		'ratio': 1
	);
	@include rp-offer(690px, $parameters, $parameters_expanded);
}
@media (min-width: 992px) {
    .container {
        width: 970px;
    }
	$parameters : (
		'margin': 3px,
		'padding': 10px,
		'small-text-level' : -1,
		'medium-text-level': 0,
		'big-text-level'   : 2,
		'tr-border': 3px
	);
	$parameters_expanded : (
		'margin': 12px,
		'padding': 15px,
		'small-text-level' : -1,
		'medium-text-level': 1,
		'big-text-level'   : 2,
		'ratio': 1
	);
	@include rp-offer(908px, $parameters, $parameters_expanded);
}
@media (min-width: 1199px) {
    .container {
        width: 1170px;
    }
	$parameters : (
		'margin': 3px,
		'padding': 15px,
		'small-text-level' : 0,
		'medium-text-level': 1,
		'big-text-level'   : 2,
		'tr-border': 3px
	);
	$parameters_expanded : (
		'margin': 15px,
		'padding': 30px,
		'small-text-level' : 0,
		'medium-text-level': 1,
		'big-text-level'   : 2,
		'ratio': 1
	);
    @include rp-offer(1108px, $parameters, $parameters_expanded);
}

.container {
    @extend .clearfix;
    box-sizing: border-box;
    margin-right: auto;
    margin-left: auto;
    padding-left: 15px;
    padding-right: 15px;
}
